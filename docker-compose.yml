version: "3.9"

services:
  minio:
    image: minio/minio:RELEASE.2024-05-27T22-44-14Z
    command: server /data --console-address ":9001"
    env_file:
      - .env
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-akidb}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-akidbsecret}
    ports:
      - "${MINIO_API_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  akidb-server:
    build:
      context: .
    env_file:
      - .env
    environment:
      RUST_LOG: ${AKIDB_LOG_LEVEL:-info}
      AKIDB_S3_ENDPOINT: ${AKIDB_S3_ENDPOINT:-http://minio:9000}
      AKIDB_S3_BUCKET: ${AKIDB_S3_BUCKET:-akidb}
      AKIDB_S3_REGION: ${AKIDB_S3_REGION:-us-east-1}
      AKIDB_S3_ACCESS_KEY: ${AKIDB_S3_ACCESS_KEY:-akidb}
      AKIDB_S3_SECRET_KEY: ${AKIDB_S3_SECRET_KEY:-akidbsecret}
      AKIDB_BIND_ADDRESS: ${AKIDB_BIND_ADDRESS:-0.0.0.0:8080}
    ports:
      - "${AKIDB_PORT:-8080}:8080"
    depends_on:
      minio:
        condition: service_healthy
    restart: unless-stopped

  devtools:
    image: mcr.microsoft.com/devcontainers/rust:1-1-bullseye
    profiles: ["devtools"]
    command: sleep infinity
    working_dir: /workspace
    volumes:
      - .:/workspace:delegated
      - cargo-cache:/usr/local/cargo/registry
      - cargo-target:/workspace/target
    env_file:
      - .env
    depends_on:
      minio:
        condition: service_healthy
    restart: unless-stopped

volumes:
  minio-data:
  cargo-cache:
  cargo-target:
